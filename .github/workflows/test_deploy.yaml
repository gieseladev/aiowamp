name: Test and deploy
on:
  push:
  release:
    types: [published]

jobs:
  test:
    name: Test with Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.x"
    steps:
      - uses: actions/checkout@v1

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install --upgrade pipenv
          pipenv install --dev --deploy
          pipenv run pip install --upgrade importlib_metadata

      - name: Run tests
        run: pipenv run tests

  build-standard:
    name: Build dist
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Setup Python
        uses: actions/setup-python@v1

      - name: Install dependencies
        run: |
          pip install -U pipenv
          pipenv install --dev --deploy

      - name: Build distribution
        run: pipenv run build

      - uses: actions/upload-artifact@v1
        with:
          name: dist-standard
          path: dist

  build-windows:
    name: Build Windows dist for Python ${{ matrix.python-version }}
    needs: test
    runs-on: windows-latest
    strategy:
      matrix:
        python-version:
          - "3.7"
    #          - "3.8"
    steps:
      - name: Install MinGW using Conda
        run: $CONDA/Scripts/conda install m2w64-gcc
        shell: bash

      - uses: actions/checkout@v1

      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install -U pipenv
          pipenv install --dev --deploy

      - name: Build distribution
        run: CC=$CONDA/Library/mingw-w64/bin/gcc.exe pipenv run build_nuitka
        shell: bash

      - uses: actions/upload-artifact@v1
        with:
          name: dist-windows-${{ matrix.python-version }}
          path: dist

  build-linux:
    name: Build Linux dist for ${{ matrix.python-version }}
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "cp37-cp37m"
          - "cp38-cp38"
    steps:
      - uses: actions/checkout@v1

      - name: Build distribution
        uses: ./.github/actions/build-nuitka-wheel
        with:
          tag: ${{ matrix.python-version }}

      - uses: actions/upload-artifact@v1
        with:
          name: dist-linux-${{ matrix.python-version }}
          path: dist

  deploy:
    # only deploy on release
    if: github.event_name == 'release'
    name: Deploy
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/actions/download-artifact@v1
        with:
          name: dist-standard

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: ${{ secrets.PYPI_USERNAME }}
          password: ${{ secrets.PYPI_PASSWORD }}